/* 회원 */
DROP TABLE MEMBER 
	CASCADE CONSTRAINTS;

/* 관리자 */
DROP TABLE ADMIN 
	CASCADE CONSTRAINTS;

/* 공지사항 */
DROP TABLE NOTICE 
	CASCADE CONSTRAINTS;

/* 포트폴리오 */
DROP TABLE PORTFOLIO 
	CASCADE CONSTRAINTS;

/* 섹션2 */
DROP TABLE TECHNICAL_STACKS 
	CASCADE CONSTRAINTS;

/* 섹션1 */
DROP TABLE ABOUT_ME 
	CASCADE CONSTRAINTS;

/* 섹션3 */
DROP TABLE EXPERIENCE 
	CASCADE CONSTRAINTS;

/* 섹션4 */
DROP TABLE TELL_ME 
	CASCADE CONSTRAINTS;

/* 문의사항답글 */
DROP TABLE inquiery_reply 
	CASCADE CONSTRAINTS;

/* 회원2 */
DROP TABLE TABLE 
	CASCADE CONSTRAINTS;

/* 문의_게시판 */
DROP TABLE INQUIRY_BOARD 
	CASCADE CONSTRAINTS;

/* 회원3 */
DROP TABLE TABLE4 
	CASCADE CONSTRAINTS;

/* 후기_게시판 */
DROP TABLE REVIEW_BOARD 
	CASCADE CONSTRAINTS;

/* 후기_댓글 */
DROP TABLE COMMENT 
	CASCADE CONSTRAINTS;

/* 새 테이블 */
DROP TABLE TABLE2 
	CASCADE CONSTRAINTS;

/* asd */
DROP TABLE TABLE3 
	CASCADE CONSTRAINTS;

/* 회원 */
CREATE TABLE MEMBER (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	PASSWORD VARCHAR2(20) NOT NULL, /* 비밀번호 */
	NAME VARCHAR2(30) NOT NULL, /* 이름 */
	BIRTH VARCHAR2(10) NOT NULL, /* 생년월일 */
	PHONE VARCHAR2(13) NOT NULL, /* 핸드폰번호 */
	INPUTDATE VARCHAR2(10) DEFAULT sysdate NOT NULL, /* 가입일 */
	ISBANNED CHAR(1) DEFAULT 'N' NOT NULL, /* 차단여부 */
	ISDROPPED CHAR(1) DEFAULT 'N' NOT NULL /* 탈퇴여부 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.USER_ID IS 'UQ';

COMMENT ON COLUMN MEMBER.PASSWORD IS '비밀번호';

COMMENT ON COLUMN MEMBER.NAME IS '이름';

COMMENT ON COLUMN MEMBER.BIRTH IS '생년월일';

COMMENT ON COLUMN MEMBER.PHONE IS '핸드폰번호';

COMMENT ON COLUMN MEMBER.INPUTDATE IS '가입일';

COMMENT ON COLUMN MEMBER.ISBANNED IS '차단여부';

COMMENT ON COLUMN MEMBER.ISDROPPED IS '탈퇴여부';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		USER_ID ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			USER_ID
		);

/* 관리자 */
CREATE TABLE ADMIN (
	ADMIN_ID VARCHAR2(10) NOT NULL, /* 관리자아이디 */
	PASSWORD VARCHAR2(500), /* 비밀번호 */
	AUTHORITY VARCHAR2(7), /* 권한 */
	INPUTDATE VARCHAR2(10) DEFAULT sysdate, /* 추가일 */
	NAME VARCHAR2(30), /* 관리자명 */
	ISREMOVED CHAR(1) NOT NULL /* 삭제여부 */
);

COMMENT ON TABLE ADMIN IS '관리자';

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '관리자아이디';

COMMENT ON COLUMN ADMIN.PASSWORD IS '비밀번호';

COMMENT ON COLUMN ADMIN.AUTHORITY IS '권한';

COMMENT ON COLUMN ADMIN.INPUTDATE IS '추가일';

COMMENT ON COLUMN ADMIN.NAME IS '관리자명';

COMMENT ON COLUMN ADMIN.ISREMOVED IS '삭제여부';

CREATE UNIQUE INDEX PK_ADMIN
	ON ADMIN (
		ADMIN_ID ASC
	);

ALTER TABLE ADMIN
	ADD
		CONSTRAINT PK_ADMIN
		PRIMARY KEY (
			ADMIN_ID
		);

/* 공지사항 */
CREATE TABLE NOTICE (
	NOTICE_NO VARCHAR(10) NOT NULL, /* 글번호 */
	ADMIN_ID VARCHAR2(10) NOT NULL, /* 관리자아이디 */
	TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	BODY VARCHAR2(4000) NOT NULL, /* 내용 */
	INPUTDATE DATE DEFAULT sysdate NOT NULL, /* 작성일 */
	VIEW_COUNT NUMBER NOT NULL /* 조회수 */
);

COMMENT ON TABLE NOTICE IS '공지사항';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '글번호';

COMMENT ON COLUMN NOTICE.ADMIN_ID IS '관리자아이디';

COMMENT ON COLUMN NOTICE.TITLE IS '제목';

COMMENT ON COLUMN NOTICE.BODY IS '내용';

COMMENT ON COLUMN NOTICE.INPUTDATE IS '작성일';

COMMENT ON COLUMN NOTICE.VIEW_COUNT IS '조회수';

CREATE UNIQUE INDEX PK_NOTICE
	ON NOTICE (
		NOTICE_NO ASC
	);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT PK_NOTICE
		PRIMARY KEY (
			NOTICE_NO
		);

/* 포트폴리오 */
CREATE TABLE PORTFOLIO (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	THUMBNAIL_IMG VARCHAR2(256) NOT NULL, /* 섬네일 */
	TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	HITS VARCHAR2(6) NOT NULL, /* 조회수 */
	PERMIT_ST CHAR(1) DEFAULT 'N' NOT NULL, /* 승인여부 */
	PUBLIC_ST CHAR(1) DEFAULT 'N' NOT NULL, /* 공개여부 */
	WRITE_DT DATE DEFAULT sysdate, /* 등록일시 */
	UPDATE_DT DATE DEFAULT sysdate /* 수정일시 */
);

COMMENT ON TABLE PORTFOLIO IS '포트폴리오';

COMMENT ON COLUMN PORTFOLIO.USER_ID IS '아이디';

COMMENT ON COLUMN PORTFOLIO.THUMBNAIL_IMG IS '섬네일';

COMMENT ON COLUMN PORTFOLIO.TITLE IS '제목';

COMMENT ON COLUMN PORTFOLIO.HITS IS '조회수';

COMMENT ON COLUMN PORTFOLIO.PERMIT_ST IS '승인여부';

COMMENT ON COLUMN PORTFOLIO.PUBLIC_ST IS '공개여부';

COMMENT ON COLUMN PORTFOLIO.WRITE_DT IS '등록일시';

COMMENT ON COLUMN PORTFOLIO.UPDATE_DT IS '수정일시';

CREATE UNIQUE INDEX PK_PORTFOLIO
	ON PORTFOLIO (
		USER_ID ASC
	);

ALTER TABLE PORTFOLIO
	ADD
		CONSTRAINT PK_PORTFOLIO
		PRIMARY KEY (
			USER_ID
		);

/* 섹션2 */
CREATE TABLE TECHNICAL_STACKS (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	SELECTED_TECHNIQUE VARCHAR2(256) /* 보유기술 */
);

COMMENT ON TABLE TECHNICAL_STACKS IS '섹션2';

COMMENT ON COLUMN TECHNICAL_STACKS.USER_ID IS '아이디';

COMMENT ON COLUMN TECHNICAL_STACKS.SELECTED_TECHNIQUE IS '보유기술';

/* 섹션1 */
CREATE TABLE ABOUT_ME (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	UPLOAD_IMG VARCHAR2(256), /* 사진 */
	TITLE VARCHAR2(120), /* 제목 */
	CONTENTS VARCHAR2(900) /* 내용 */
);

COMMENT ON TABLE ABOUT_ME IS '섹션1';

COMMENT ON COLUMN ABOUT_ME.USER_ID IS '아이디';

COMMENT ON COLUMN ABOUT_ME.UPLOAD_IMG IS '사진';

COMMENT ON COLUMN ABOUT_ME.TITLE IS '제목';

COMMENT ON COLUMN ABOUT_ME.CONTENTS IS '내용';

CREATE UNIQUE INDEX PK_ABOUT_ME
	ON ABOUT_ME (
		USER_ID ASC
	);

ALTER TABLE ABOUT_ME
	ADD
		CONSTRAINT PK_ABOUT_ME
		PRIMARY KEY (
			USER_ID
		);

/* 섹션3 */
CREATE TABLE EXPERIENCE (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	EXP_CD VARCHAR2(3) NOT NULL, /* 분류코드 */
	UPLOAD_IMG VARCHAR2(256), /* 사진 */
	TITLE VARCHAR2(120), /* 제목 */
	CONTENTS VARCHAR2(900) /* 내용 */
);

COMMENT ON TABLE EXPERIENCE IS '섹션3';

COMMENT ON COLUMN EXPERIENCE.USER_ID IS '아이디';

COMMENT ON COLUMN EXPERIENCE.EXP_CD IS '분류코드';

COMMENT ON COLUMN EXPERIENCE.UPLOAD_IMG IS '사진';

COMMENT ON COLUMN EXPERIENCE.TITLE IS '제목';

COMMENT ON COLUMN EXPERIENCE.CONTENTS IS '내용';

/* 섹션4 */
CREATE TABLE TELL_ME (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	PHONE_NO VARCHAR2(13), /* 핸드폰번호 */
	EMAIL VARCHAR2(30), /* 이메일 */
	BLOG VARCHAR2(256) /* 블로그 */
);

COMMENT ON TABLE TELL_ME IS '섹션4';

COMMENT ON COLUMN TELL_ME.USER_ID IS '아이디';

COMMENT ON COLUMN TELL_ME.PHONE_NO IS '핸드폰번호';

COMMENT ON COLUMN TELL_ME.EMAIL IS '이메일';

COMMENT ON COLUMN TELL_ME.BLOG IS '블로그';

CREATE UNIQUE INDEX PK_TELL_ME
	ON TELL_ME (
		USER_ID ASC
	);

ALTER TABLE TELL_ME
	ADD
		CONSTRAINT PK_TELL_ME
		PRIMARY KEY (
			USER_ID
		);

/* 문의사항답글 */
CREATE TABLE inquiery_reply (
	NUM NUMBER NOT NULL, /* 글번호 */
	SUBJECT VARCHAR2(1000) NOT NULL, /* 제목 */
	W_DATE DATE DEFAULT sysdate NOT NULL /* 작성날짜 */
);

COMMENT ON TABLE inquiery_reply IS '문의사항답글';

COMMENT ON COLUMN inquiery_reply.NUM IS '글번호';

COMMENT ON COLUMN inquiery_reply.SUBJECT IS '제목';

COMMENT ON COLUMN inquiery_reply.W_DATE IS '작성날짜';

CREATE UNIQUE INDEX PK_inquiery_reply
	ON inquiery_reply (
		NUM ASC
	);

ALTER TABLE inquiery_reply
	ADD
		CONSTRAINT PK_inquiery_reply
		PRIMARY KEY (
			NUM
		);

/* 회원2 */
CREATE TABLE TABLE (
	MEMBER_NO CHAR(10) NOT NULL, /* 회원번호 */
	ID VARCHAR2(20) NOT NULL, /* 아이디 */
	PASSWORD VARCHAR2(20) NOT NULL, /* 비밀번호 */
	BIRTH VARCHAR2(10) NOT NULL, /* 생년월일 */
	PHONE varchar2(13) NOT NULL, /* 핸드폰번호 */
	NAME VARCHAR2(30) NOT NULL, /* 이름 */
	INPUTDATE VARCHAR2(10) NOT NULL /* 가입일 */
);

COMMENT ON TABLE TABLE IS '회원2';

COMMENT ON COLUMN TABLE.MEMBER_NO IS '회원번호';

COMMENT ON COLUMN TABLE.ID IS '아이디';

COMMENT ON COLUMN TABLE.PASSWORD IS '비밀번호';

COMMENT ON COLUMN TABLE.BIRTH IS '생년월일';

COMMENT ON COLUMN TABLE.PHONE IS '핸드폰번호';

COMMENT ON COLUMN TABLE.NAME IS '이름';

COMMENT ON COLUMN TABLE.INPUTDATE IS '가입일';

CREATE UNIQUE INDEX PK_TABLE
	ON TABLE (
		MEMBER_NO ASC
	);

ALTER TABLE TABLE
	ADD
		CONSTRAINT PK_TABLE
		PRIMARY KEY (
			MEMBER_NO
		);

/* 문의_게시판 */
CREATE TABLE INQUIRY_BOARD (
	NUM NUMBER NOT NULL, /* 글번호 */
	USER_ID VARCHAR2(20), /* 아이디 */
	SUBJECT VARCHAR2(1000) NOT NULL, /* 제목 */
	USER_CONTENTS CLOB NOT NULL, /* 내용 */
	STATUS CHAR(1) DEFAULT 'W' NOT NULL, /* 상태 */
	W_DATE DATE DEFAULT sysdate NOT NULL, /* 작성날짜 */
	VIEWS NUMBER(4), /* 조회수 */
	ADMIN_ID VARCHAR2(10), /* 관리자아이디 */
	R_CONTENTS VARCHAR2(4000) NOT NULL, /* 답변내용 */
	R_DATE DATE DEFAULT sysdate NOT NULL /* 답변날짜 */
);

COMMENT ON TABLE INQUIRY_BOARD IS '문의_게시판';

COMMENT ON COLUMN INQUIRY_BOARD.NUM IS '글번호';

COMMENT ON COLUMN INQUIRY_BOARD.USER_ID IS '아이디';

COMMENT ON COLUMN INQUIRY_BOARD.SUBJECT IS '제목';

COMMENT ON COLUMN INQUIRY_BOARD.USER_CONTENTS IS '내용';

COMMENT ON COLUMN INQUIRY_BOARD.STATUS IS '상태';

COMMENT ON COLUMN INQUIRY_BOARD.W_DATE IS '작성날짜';

COMMENT ON COLUMN INQUIRY_BOARD.VIEWS IS '조회수';

COMMENT ON COLUMN INQUIRY_BOARD.ADMIN_ID IS '관리자아이디';

COMMENT ON COLUMN INQUIRY_BOARD.R_CONTENTS IS '답변내용';

COMMENT ON COLUMN INQUIRY_BOARD.R_DATE IS '답변날짜';

CREATE UNIQUE INDEX PK_INQUIRY_BOARD
	ON INQUIRY_BOARD (
		NUM ASC
	);

ALTER TABLE INQUIRY_BOARD
	ADD
		CONSTRAINT PK_INQUIRY_BOARD
		PRIMARY KEY (
			NUM
		);

/* 회원3 */
CREATE TABLE TABLE4 (
	member_no CHAR(10) NOT NULL, /* 회원코드 */
	ID VARCHAR2(20) NOT NULL, /* 아이디 */
	NAME VARCHAR2(30) NOT NULL /* 회원이름 */
);

COMMENT ON TABLE TABLE4 IS '회원3';

COMMENT ON COLUMN TABLE4.member_no IS '회원코드';

COMMENT ON COLUMN TABLE4.ID IS '아이디';

COMMENT ON COLUMN TABLE4.NAME IS '회원이름';

CREATE UNIQUE INDEX PK_TABLE4
	ON TABLE4 (
		member_no ASC
	);

ALTER TABLE TABLE4
	ADD
		CONSTRAINT PK_TABLE4
		PRIMARY KEY (
			member_no
		);

/* 후기_게시판 */
CREATE TABLE REVIEW_BOARD (
	RE_NUM VARCHAR2(4) NOT NULL, /* 글번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	RE_CONTENS VARCHAR2(4000) NOT NULL, /* 내용 */
	RE_TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	RE_INPUTDATE DATE DEFAULT sysdate NOT NULL, /* 작성일 */
	RE_CNT NUMBER(4) NOT NULL /* 조회수 */
);

COMMENT ON TABLE REVIEW_BOARD IS '후기_게시판';

COMMENT ON COLUMN REVIEW_BOARD.RE_NUM IS '글번호';

COMMENT ON COLUMN REVIEW_BOARD.USER_ID IS '아이디';

COMMENT ON COLUMN REVIEW_BOARD.RE_CONTENS IS '내용';

COMMENT ON COLUMN REVIEW_BOARD.RE_TITLE IS '제목';

COMMENT ON COLUMN REVIEW_BOARD.RE_INPUTDATE IS '작성일';

COMMENT ON COLUMN REVIEW_BOARD.RE_CNT IS '조회수';

CREATE UNIQUE INDEX PK_REVIEW_BOARD
	ON REVIEW_BOARD (
		RE_NUM ASC
	);

ALTER TABLE REVIEW_BOARD
	ADD
		CONSTRAINT PK_REVIEW_BOARD
		PRIMARY KEY (
			RE_NUM
		);

/* 후기_댓글 */
CREATE TABLE COMMENT (
	RE_NUM VARCHAR2(4) NOT NULL, /* 글번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	COM_CONTENTS VARCHAR2(150) NOT NULL, /* 내용 */
	COM_INPUTDATE DATE DEFAULT sysdate NOT NULL /* 작성일 */
);

COMMENT ON TABLE COMMENT IS '후기_댓글';

COMMENT ON COLUMN COMMENT.RE_NUM IS '글번호';

COMMENT ON COLUMN COMMENT.USER_ID IS '아이디';

COMMENT ON COLUMN COMMENT.COM_CONTENTS IS '내용';

COMMENT ON COLUMN COMMENT.COM_INPUTDATE IS '작성일';

/* 새 테이블 */
CREATE TABLE TABLE2 (
);

COMMENT ON TABLE TABLE2 IS '새 테이블';

/* asd */
CREATE TABLE TABLE3 (
	COL <지정 되지 않음>, /* 새 컬럼 */
	COL2 <지정 되지 않음> /* 새 컬럼2 */
);

COMMENT ON TABLE TABLE3 IS 'asd';

COMMENT ON COLUMN TABLE3.COL IS '새 컬럼';

COMMENT ON COLUMN TABLE3.COL2 IS '새 컬럼2';

ALTER TABLE NOTICE
	ADD
		CONSTRAINT FK_ADMIN_TO_NOTICE
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE PORTFOLIO
	ADD
		CONSTRAINT FK_MEMBER_TO_PORTFOLIO
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES MEMBER (
			USER_ID
		);

ALTER TABLE TECHNICAL_STACKS
	ADD
		CONSTRAINT FK_PORTFOLIO_TO_TECHNICAL_STACKS
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES PORTFOLIO (
			USER_ID
		);

ALTER TABLE ABOUT_ME
	ADD
		CONSTRAINT FK_PORTFOLIO_TO_ABOUT_ME
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES PORTFOLIO (
			USER_ID
		);

ALTER TABLE EXPERIENCE
	ADD
		CONSTRAINT FK_PORTFOLIO_TO_EXPERIENCE
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES PORTFOLIO (
			USER_ID
		);

ALTER TABLE TELL_ME
	ADD
		CONSTRAINT FK_PORTFOLIO_TO_TELL_ME
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES PORTFOLIO (
			USER_ID
		);

ALTER TABLE inquiery_reply
	ADD
		CONSTRAINT FK_INQUIRY_BOARD_TO_inquiery_reply
		FOREIGN KEY (
			NUM
		)
		REFERENCES INQUIRY_BOARD (
			NUM
		);

ALTER TABLE INQUIRY_BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_INQUIRY_BOARD
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES MEMBER (
			USER_ID
		);

ALTER TABLE INQUIRY_BOARD
	ADD
		CONSTRAINT FK_ADMIN_TO_INQUIRY_BOARD
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE REVIEW_BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW_BOARD
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES MEMBER (
			USER_ID
		);

ALTER TABLE COMMENT
	ADD
		CONSTRAINT FK_REVIEW_BOARD_TO_COMMENT
		FOREIGN KEY (
			RE_NUM
		)
		REFERENCES REVIEW_BOARD (
			RE_NUM
		);

ALTER TABLE COMMENT
	ADD
		CONSTRAINT FK_MEMBER_TO_COMMENT
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES MEMBER (
			USER_ID
		);